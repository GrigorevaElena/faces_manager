package grigoreva.facesmanager.data.greendao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import grigoreva.facesmanager.data.greendao.Person;
import grigoreva.facesmanager.data.greendao.PersonPhoto;
import grigoreva.facesmanager.data.greendao.PhotoLandmark;

import grigoreva.facesmanager.data.greendao.PersonDao;
import grigoreva.facesmanager.data.greendao.PersonPhotoDao;
import grigoreva.facesmanager.data.greendao.PhotoLandmarkDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig personDaoConfig;
    private final DaoConfig personPhotoDaoConfig;
    private final DaoConfig photoLandmarkDaoConfig;

    private final PersonDao personDao;
    private final PersonPhotoDao personPhotoDao;
    private final PhotoLandmarkDao photoLandmarkDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        personDaoConfig = daoConfigMap.get(PersonDao.class).clone();
        personDaoConfig.initIdentityScope(type);

        personPhotoDaoConfig = daoConfigMap.get(PersonPhotoDao.class).clone();
        personPhotoDaoConfig.initIdentityScope(type);

        photoLandmarkDaoConfig = daoConfigMap.get(PhotoLandmarkDao.class).clone();
        photoLandmarkDaoConfig.initIdentityScope(type);

        personDao = new PersonDao(personDaoConfig, this);
        personPhotoDao = new PersonPhotoDao(personPhotoDaoConfig, this);
        photoLandmarkDao = new PhotoLandmarkDao(photoLandmarkDaoConfig, this);

        registerDao(Person.class, personDao);
        registerDao(PersonPhoto.class, personPhotoDao);
        registerDao(PhotoLandmark.class, photoLandmarkDao);
    }
    
    public void clear() {
        personDaoConfig.getIdentityScope().clear();
        personPhotoDaoConfig.getIdentityScope().clear();
        photoLandmarkDaoConfig.getIdentityScope().clear();
    }

    public PersonDao getPersonDao() {
        return personDao;
    }

    public PersonPhotoDao getPersonPhotoDao() {
        return personPhotoDao;
    }

    public PhotoLandmarkDao getPhotoLandmarkDao() {
        return photoLandmarkDao;
    }

}
